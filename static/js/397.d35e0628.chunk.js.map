{"version":3,"file":"static/js/397.d35e0628.chunk.js","mappings":"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","sources":["store/reducers/users/selectors.ts","services/usersService.ts","services/followService.ts","store/reducers/users/thunk-creators.ts","components/UserItem/style.ts","components/UserItem/UserItem.tsx","components/UsersList/style.ts","components/UsersList/UsersList.tsx","utils/getPagesOfPortion.ts","components/Paginator/style.ts","components/Paginator/Paginator.tsx","components/UsersFilter/style.ts","components/UsersFilter/UsersFilter.tsx","components/Users/Users.tsx","pages/UsersPage/UsersPage.tsx"],"sourcesContent":["import { RootState } from './../../index';\r\n\r\nexport const users_selectIsLoading = (state: RootState) => state.users.isLoading;\r\nexport const users_selectCurrentPageNum = (state: RootState) => state.users.currentPageNum;\r\nexport const users_selectPageSize = (state: RootState) => state.users.pageSize;\r\nexport const users_selectFilter = (state: RootState) => state.users.filter;\r\nexport const users_selectUsers = (state: RootState) => state.users.users;\r\nexport const users_selectTotalCount = (state: RootState) => state.users.totalCount;\r\nexport const users_selectError = (state: RootState) => state.users.error;","import $axios from \"../axios\";\r\nimport { IFilter } from \"../models/IFilter\";\r\nimport { IUsersResponseType } from './../models/IUsersResponseType';\r\n\r\nclass UsersService {\r\n   static fetchUsers = async (pageNumber: number = 1, limit: number = 10, filter: IFilter) => {\r\n      const term = filter.term ? `&term=${filter.term}` : '';\r\n      const friend = filter.friendsOnly !== 'null' ? `&friend=${filter.friendsOnly}` : '';\r\n\r\n      const { data } = await $axios.get<IUsersResponseType>(`/users?count=${limit}&page=${pageNumber}` + term + friend);\r\n      return data;\r\n   }\r\n}\r\n\r\nexport default UsersService;","import $axios from \"../axios\";\r\nimport { ResponseType } from \"../models/ResponseType\";\r\n\r\nclass FollowService {\r\n   static follow = async (id: number) => {\r\n      const { data } = await $axios.post<ResponseType>('/follow/' + id);\r\n      return data;\r\n   }\r\n\r\n   static unfollow = async (id: number) => {\r\n      const { data } = await $axios.delete<ResponseType>('/follow/' + id);\r\n      return data;\r\n   }\r\n}\r\n\r\nexport default FollowService;","import { IFilter } from '../../../models/IFilter';\r\nimport { AppDispatch } from './../../index';\r\nimport { UsersActions } from '.';\r\nimport UsersService from '../../../services/usersService';\r\nimport FollowService from '../../../services/followService';\r\nimport { ResultCodes } from '../../../models/ResultCodes';\r\n\r\nexport const fetchUsers = (pageNum: number, pageSize: number, filter: IFilter) => async (dispatch: AppDispatch) => {\r\n   dispatch(UsersActions.fetchUsersStarted());\r\n   try {\r\n      const { error, ...data } = await UsersService.fetchUsers(pageNum, pageSize, filter);\r\n      if (!error) {\r\n         dispatch(UsersActions.fetchUsersSuccess(data));\r\n      } else {\r\n         dispatch(UsersActions.fetchUsersFail(error));\r\n      }\r\n   } catch (e: any) {\r\n      dispatch(UsersActions.fetchUsersFail(e.message));\r\n   }\r\n}\r\n\r\nexport const followUser = (id: number) => async (dispatch: AppDispatch) => {\r\n   try {\r\n      const data = await FollowService.follow(id);\r\n      if (data.resultCode === ResultCodes.SUCCESS) {\r\n         dispatch(UsersActions.followUserSuccess(id));\r\n      } else {\r\n         alert(data.messages[0]);\r\n      }\r\n   } catch (e: any) {\r\n      alert(e.message);\r\n   }\r\n}\r\n\r\nexport const unfollowUser = (id: number) => async (dispatch: AppDispatch) => {\r\n   try {\r\n      const data = await FollowService.unfollow(id);\r\n      if (data.resultCode === ResultCodes.SUCCESS) {\r\n         dispatch(UsersActions.unfollowUserSuccess(id));\r\n      } else {\r\n         alert(data.messages[0]);\r\n      }\r\n   } catch (e: any) {\r\n      alert(e.message);\r\n   }\r\n}","import styled from \"styled-components\";\r\nimport { Avatar } from \"../styled\";\r\n\r\nexport const StyledUserItem = styled.li`\r\n   padding: 20px 0;\r\n\r\n   &:not(:last-child) {\r\n      border-bottom: 1px solid ${props => props.theme.colors.$lightGray};\r\n   }\r\n`;\r\n\r\nexport const UserItemBody = styled.div`\r\n   display: flex;\r\n   align-items: center;\r\n`;\r\n\r\nexport const UserItemActions = styled.div`\r\n   display: flex;\r\n   flex-direction: column;\r\n   margin-right: 30px;\r\n`;\r\n\r\nexport const UserItemAvatar = styled(Avatar)`\r\n   height: 70px;\r\n   width: 70px;\r\n   margin-bottom: 15px;\r\n   border: 1px solid ${props => props.theme.colors.$gray};\r\n   border-radius: 50%;\r\n\r\n   img {\r\n      border-radius: 50%;\r\n   }\r\n`;\r\n\r\nexport const UserItemInfo = styled.div`\r\n   flex: 1 1 auto;\r\n   display: flex;\r\n   flex-direction: column;\r\n`;\r\n\r\nexport const UserItemName = styled.h4`\r\n   margin-bottom: 5px;\r\n   font-size: 22px;\r\n   font-weight: 600;\r\n   color: ${props => props.theme.colors.$green};\r\n`;\r\n\r\nexport const UserItemStatus = styled.p`\r\n   font-size: 20px;\r\n   font-weight: 500;\r\n   word-break: break-word;\r\n   color: ${props => props.theme.colors.$gray};\r\n`;","import React, { FC, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport defaultAvatar from \"../../assets/img/default-user-photo.jpg\";\r\nimport { IUser } from \"../../models/IUser\";\r\nimport { RouteNames } from \"../../router/RouteNames\";\r\nimport { Button } from \"../styled\";\r\nimport {\r\n   StyledUserItem,\r\n   UserItemActions,\r\n   UserItemAvatar,\r\n   UserItemBody,\r\n   UserItemInfo,\r\n   UserItemName,\r\n   UserItemStatus\r\n} from \"./style\";\r\n\r\ninterface Props {\r\n   user: IUser\r\n   toggleFollowing: (id: number, followed: boolean) => Promise<void>\r\n}\r\n\r\nconst UserItem: FC<Props> = React.memo(({ user, toggleFollowing }) => {\r\n   const { id, name, photos, status, followed } = user;\r\n\r\n   const avatarUrl = photos.small || defaultAvatar;\r\n   const btnText = followed ? 'Unfollow' : 'Follow';\r\n   const statusText = status || 'I don\\'t have a status';\r\n\r\n   const [disabled, setDisabled] = useState(false);\r\n\r\n   const handleBtnClick = async () => {\r\n      setDisabled(true);\r\n      await toggleFollowing(id, followed);\r\n      setDisabled(false);\r\n   }\r\n\r\n   return (\r\n      <StyledUserItem>\r\n         <UserItemBody>\r\n            <UserItemActions>\r\n               <NavLink to={RouteNames.PROFILE + `/${id}`}>\r\n                  <UserItemAvatar>\r\n                     <img src={avatarUrl} alt=\"Avatar\" />\r\n                  </UserItemAvatar>\r\n               </NavLink>\r\n               <Button\r\n                  p=\"0px 5px\"\r\n                  disabled={disabled}\r\n                  onClick={handleBtnClick}\r\n               >\r\n                  {btnText}\r\n               </Button>\r\n            </UserItemActions>\r\n            <UserItemInfo>\r\n               <UserItemName>{name}</UserItemName>\r\n               <UserItemStatus>{statusText}</UserItemStatus>\r\n            </UserItemInfo>\r\n         </UserItemBody>\r\n      </StyledUserItem>\r\n   );\r\n})\r\n\r\nexport default UserItem;","import styled from \"styled-components\";\r\n\r\nexport const StyledUsersList = styled.ul`\r\n   flex: 1 1 auto;\r\n   display: flex;\r\n   flex-direction: column;\r\n`;","import React, { FC } from \"react\";\r\nimport { IUser } from \"../../models/IUser\";\r\nimport UserItem from \"../UserItem/UserItem\";\r\nimport { StyledUsersList } from \"./style\";\r\n\r\ninterface Props {\r\n   users: IUser[]\r\n   toggleFollowing: (id: number, followed: boolean) => Promise<void>\r\n}\r\n\r\nconst UsersList: FC<Props> = React.memo(({ users, toggleFollowing }) => {\r\n   return (\r\n      <StyledUsersList>\r\n         {users.map(user => (\r\n            <UserItem\r\n               key={user.id}\r\n               user={user}\r\n               toggleFollowing={toggleFollowing} />\r\n         ))}\r\n      </StyledUsersList>\r\n   );\r\n})\r\n\r\nexport default UsersList;","const getPagesOfPortion = (firstPageOfPortion: number, lastPageOfPortion: number) => {\r\n   let pages: number[] = [];\r\n   for (let i = firstPageOfPortion; i <= lastPageOfPortion; i++) {\r\n      pages.push(i);\r\n   }\r\n   return pages;\r\n}\r\n\r\nexport default getPagesOfPortion;","import { Pagination } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledPaginator = styled.div`\r\n   display: flex;\r\n   justify-content: center;\r\n`;\r\n\r\nexport const PaginatorItem = styled(Pagination.Item)`\r\n   & .page-link {\r\n      color: ${props => props.theme.colors.$orange};\r\n   }\r\n\r\n   &.active .page-link {\r\n      color: #fff;\r\n      background-color: ${props => props.theme.colors.$orange};\r\n      border-color: ${props => props.theme.colors.$orange};\r\n   }\r\n`;\r\n\r\nexport const PaginatorPrev = styled(Pagination.Prev)`\r\n   & .page-link {\r\n      color: ${props => props.theme.colors.$orange};\r\n   }\r\n\r\n   &.disabled .page-link {\r\n      color: ${props => props.theme.colors.$gray}\r\n   }\r\n`;\r\n\r\nexport const PaginatorNext = styled(Pagination.Next)`\r\n   & .page-link {\r\n      color: ${props => props.theme.colors.$orange};\r\n   }\r\n\r\n   &.disabled .page-link {\r\n      color: ${props => props.theme.colors.$gray}\r\n   }\r\n`;","import React, { FC } from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport getPagesOfPortion from '../../utils/getPagesOfPortion';\r\nimport { PaginatorItem, PaginatorNext, PaginatorPrev, StyledPaginator } from './style';\r\n\r\ninterface Props {\r\n   totalCount: number\r\n   currentPageNum: number\r\n   pageSize?: number\r\n   portionSize?: number\r\n   currentPortionNum: number\r\n   onPageChange: (pageNum: number) => void\r\n   onPrevBtnClick: (pageNum: number) => void\r\n   onNextBtnClick: (pageNum: number) => void\r\n}\r\n\r\nconst Paginator: FC<Props> = React.memo(({\r\n   totalCount,\r\n   currentPageNum,\r\n   pageSize = 10,\r\n   portionSize = 10,\r\n   currentPortionNum,\r\n   onPageChange,\r\n   onPrevBtnClick,\r\n   onNextBtnClick }) => {\r\n   const pagesCount = Math.ceil(totalCount / pageSize) || 1;\r\n   const portionsCount = Math.ceil(pagesCount / portionSize);\r\n\r\n   const firstPageOfPortion = currentPortionNum * pageSize - pageSize + 1;\r\n   const lastPageOfProtion = currentPortionNum === portionsCount ? pagesCount : currentPortionNum * pageSize;\r\n\r\n   const pages = getPagesOfPortion(firstPageOfPortion, lastPageOfProtion);\r\n\r\n   const disablePrevBtn = currentPortionNum === 1;\r\n   const disableNextBtn = currentPortionNum === portionsCount;\r\n\r\n   const handlePageChange = (pageNum: number) => {\r\n      if (pageNum === currentPageNum) return;\r\n      onPageChange(pageNum);\r\n   }\r\n\r\n   const handlePrevBtnClick = () => {\r\n      onPrevBtnClick(firstPageOfPortion - pageSize);\r\n   }\r\n\r\n   const handleNextBtnClick = () => {\r\n      onNextBtnClick(firstPageOfPortion + pageSize);\r\n   }\r\n\r\n   return (\r\n      <StyledPaginator>\r\n         <Pagination>\r\n            <PaginatorPrev disabled={disablePrevBtn} onClick={handlePrevBtnClick} />\r\n            {pages.map(p => (\r\n               <PaginatorItem\r\n                  key={p}\r\n                  active={currentPageNum === p}\r\n                  onClick={() => handlePageChange(p)}\r\n               >\r\n                  {p}\r\n               </PaginatorItem>\r\n            ))}\r\n            <PaginatorNext disabled={disableNextBtn} onClick={handleNextBtnClick} />\r\n         </Pagination>\r\n      </StyledPaginator>\r\n   );\r\n})\r\n\r\nexport default Paginator;","import styled from \"styled-components\";\r\n\r\nexport const StyledUsersFilter = styled.div`\r\n   margin-bottom: 20px;\r\n`;","import React, { FC, useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { Form } from 'react-bootstrap';\r\nimport { IFilter } from '../../models/IFilter';\r\nimport { Button } from '../styled';\r\nimport { StyledUsersFilter } from './style';\r\n\r\ninterface Props {\r\n   handleSubmit: (filter: IFilter) => Promise<void>\r\n   filter: IFilter\r\n}\r\n\r\ninterface FormValues {\r\n   term: string\r\n   friendsOnly: 'null' | 'true' | 'false'\r\n}\r\n\r\nconst UsersFilter: FC<Props> = React.memo(({ handleSubmit, filter }) => {\r\n   const [disableBtn, setDisableBtn] = useState(false);\r\n\r\n   const formik = useFormik({\r\n      initialValues: {\r\n         term: filter.term,\r\n         friendsOnly: filter.friendsOnly\r\n      } as FormValues,\r\n      onSubmit: async (values) => {\r\n         setDisableBtn(true);\r\n         await handleSubmit(values);\r\n         setDisableBtn(false);\r\n      }\r\n   });\r\n\r\n   return (\r\n      <StyledUsersFilter>\r\n         <Form onSubmit={formik.handleSubmit} className=\"d-flex flex-row justify-content-start gap-2\">\r\n            <Form.Control type='text' name='term' value={formik.values.term} onChange={formik.handleChange} placeholder=\"Search...\" />\r\n            <Form.Select name='friendsOnly' value={formik.values.friendsOnly} onChange={formik.handleChange}>\r\n               <option value=\"null\">All users</option>\r\n               <option value=\"true\">Friends only</option>\r\n               <option value=\"false\">Not friends</option>\r\n            </Form.Select>\r\n            <Button disabled={disableBtn} type='submit'>Find</Button>\r\n         </Form>\r\n      </StyledUsersFilter>\r\n   );\r\n})\r\n\r\nexport default UsersFilter;","import React, { FC, useState, useEffect, useCallback } from \"react\";\r\nimport { IUser } from \"../../models/IUser\";\r\nimport { IFilter } from \"../../models/IFilter\";\r\nimport { useAppDispatch } from \"../../hooks/redux\";\r\nimport { UsersActions } from \"../../store/reducers/users\";\r\nimport { fetchUsers, followUser, unfollowUser } from \"../../store/reducers/users/thunk-creators\";\r\nimport { Page, PageBody } from \"../../components/styled/Page\";\r\nimport UsersList from \"../../components/UsersList/UsersList\";\r\nimport Paginator from \"../Paginator/Paginator\";\r\nimport PagePreloader from \"../PagePreloader/PagePreloader\";\r\nimport UsersFilter from \"../UsersFilter/UsersFilter\";\r\n\r\ninterface Props {\r\n   isLoading: boolean\r\n   currentPageNum: number\r\n   pageSize: number\r\n   filter: IFilter\r\n   users: IUser[]\r\n   totalCount: number\r\n   setSearchParams: Function\r\n}\r\n\r\nconst Users: FC<Props> = ({ isLoading, currentPageNum, pageSize, filter, users, totalCount, setSearchParams }) => {\r\n   const [currentPortionNum, setCurrentPortionNum] = useState(1);\r\n\r\n   const dispatch = useAppDispatch();\r\n\r\n   useEffect(() => {\r\n      setCurrentPortionNum(Math.ceil(currentPageNum / pageSize));\r\n   }, []);\r\n\r\n   useEffect(() => {\r\n      const searchParams: { page?: string, term?: string, friend?: string } = {};\r\n\r\n      if (currentPageNum !== 1) searchParams.page = String(currentPageNum);\r\n      if (filter.term) searchParams.term = filter.term;\r\n      if (filter.friendsOnly !== 'null') searchParams.friend = filter.friendsOnly;\r\n\r\n      setSearchParams(searchParams);\r\n\r\n   }, [currentPageNum, filter]);\r\n\r\n   const handlePageChange = useCallback((pageNum: number) => {\r\n      dispatch(UsersActions.setCurrentPageNum(pageNum));\r\n      dispatch(fetchUsers(pageNum, pageSize, filter));\r\n   }, [pageSize, filter])\r\n\r\n   const handlePrevBtnClick = useCallback((pageNum: number) => {\r\n      setCurrentPortionNum(currentPortionNum => currentPortionNum - 1);\r\n      handlePageChange(pageNum);\r\n   }, [handlePageChange])\r\n\r\n   const handleNextBtnClick = useCallback((pageNum: number) => {\r\n      setCurrentPortionNum(currentPortionNum => currentPortionNum + 1);\r\n      handlePageChange(pageNum);\r\n   }, [handlePageChange])\r\n\r\n   const findUsers = useCallback(async (newFilter: IFilter) => {\r\n      console.log(filter.term !== newFilter.term || filter.friendsOnly !== newFilter.friendsOnly);\r\n\r\n      if (filter.term !== newFilter.term || filter.friendsOnly !== newFilter.friendsOnly) {\r\n         dispatch(UsersActions.setCurrentPageNum(1));\r\n         setCurrentPortionNum(1);\r\n         dispatch(UsersActions.setFilter(newFilter));\r\n         await dispatch(fetchUsers(1, pageSize, newFilter));\r\n      }\r\n   }, [pageSize, filter])\r\n\r\n   const toggleFollowing = useCallback(async (id: number, followed: boolean) => {\r\n      const action = followed ? unfollowUser : followUser;\r\n      await dispatch(action(id));\r\n   }, [])\r\n\r\n   return (\r\n      <Page>\r\n         <PageBody>\r\n            <UsersFilter\r\n               handleSubmit={findUsers}\r\n               filter={filter} />\r\n            <Paginator\r\n               totalCount={totalCount}\r\n               currentPageNum={currentPageNum}\r\n               currentPortionNum={currentPortionNum}\r\n               onPageChange={handlePageChange}\r\n               onPrevBtnClick={handlePrevBtnClick}\r\n               onNextBtnClick={handleNextBtnClick} />\r\n            {isLoading ?\r\n               <PagePreloader />\r\n               :\r\n               <UsersList users={users} toggleFollowing={toggleFollowing} />\r\n            }\r\n            <Paginator\r\n               totalCount={totalCount}\r\n               currentPageNum={currentPageNum}\r\n               currentPortionNum={currentPortionNum}\r\n               onPageChange={handlePageChange}\r\n               onPrevBtnClick={handlePrevBtnClick}\r\n               onNextBtnClick={handleNextBtnClick} />\r\n         </PageBody>\r\n      </Page>\r\n   );\r\n}\r\n\r\nexport default Users;","import React, { FC, useEffect } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/redux\";\r\nimport {\r\n   users_selectIsLoading,\r\n   users_selectCurrentPageNum,\r\n   users_selectFilter,\r\n   users_selectPageSize,\r\n   users_selectUsers,\r\n   users_selectTotalCount,\r\n   users_selectError\r\n} from \"../../store/reducers/users/selectors\";\r\nimport { UsersActions } from \"../../store/reducers/users\";\r\nimport { fetchUsers } from \"../../store/reducers/users/thunk-creators\";\r\nimport PagePreloader from \"../../components/PagePreloader/PagePreloader\";\r\nimport Users from \"../../components/Users/Users\";\r\nimport GlobalError from \"../../components/GlobalError/GlobalError\";\r\n\r\nconst UsersPage: FC = () => {\r\n   const isLoading = useAppSelector(users_selectIsLoading);\r\n   const currentPageNum = useAppSelector(users_selectCurrentPageNum);\r\n   const pageSize = useAppSelector(users_selectPageSize);\r\n   const filter = useAppSelector(users_selectFilter);\r\n   const users = useAppSelector(users_selectUsers);\r\n   const totalCount = useAppSelector(users_selectTotalCount);\r\n   const error = useAppSelector(users_selectError);\r\n\r\n   const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n   const dispatch = useAppDispatch();\r\n\r\n   useEffect(() => {\r\n      const page = searchParams.get('page');\r\n      const term = searchParams.get('term');\r\n      const friend = searchParams.get('friend');\r\n\r\n      let actualPageNum = Number(page) || currentPageNum;\r\n      let actualFilter = filter;\r\n\r\n      if (term) actualFilter = { ...actualFilter, term };\r\n      if (friend) actualFilter = { ...actualFilter, friendsOnly: friend as 'null' | 'true' | 'false' };\r\n\r\n      dispatch(UsersActions.setCurrentPageNum(actualPageNum));\r\n      dispatch(UsersActions.setFilter(actualFilter));\r\n      dispatch(fetchUsers(actualPageNum, pageSize, actualFilter));\r\n   }, []);\r\n\r\n   if (!users) return <PagePreloader />\r\n   if (error) return <GlobalError error={error} onPage />\r\n\r\n   return (\r\n      <Users\r\n         isLoading={isLoading}\r\n         currentPageNum={currentPageNum}\r\n         pageSize={pageSize}\r\n         filter={filter}\r\n         users={users}\r\n         totalCount={totalCount}\r\n         setSearchParams={setSearchParams} />\r\n   );\r\n}\r\n\r\nexport default UsersPage;"],"names":["users_selectIsLoading","state","users","isLoading","users_selectCurrentPageNum","currentPageNum","users_selectPageSize","pageSize","users_selectFilter","filter","users_selectUsers","users_selectTotalCount","totalCount","users_selectError","error","UsersService","fetchUsers","pageNumber","limit","term","friend","friendsOnly","$axios","data","FollowService","follow","id","unfollow","pageNum","dispatch","UsersActions","message","followUser","resultCode","ResultCodes","alert","messages","unfollowUser","StyledUserItem","styled","props","theme","colors","$lightGray","UserItemBody","UserItemActions","UserItemAvatar","Avatar","$gray","UserItemInfo","UserItemName","$green","UserItemStatus","UserItem","React","user","toggleFollowing","name","photos","status","followed","avatarUrl","small","defaultAvatar","btnText","statusText","useState","disabled","setDisabled","handleBtnClick","to","RouteNames","src","alt","p","onClick","StyledUsersList","map","firstPageOfPortion","lastPageOfPortion","pages","i","push","StyledPaginator","PaginatorItem","Pagination","$orange","PaginatorPrev","PaginatorNext","portionSize","currentPortionNum","onPageChange","onPrevBtnClick","onNextBtnClick","pagesCount","Math","ceil","portionsCount","getPagesOfPortion","disablePrevBtn","disableNextBtn","active","StyledUsersFilter","UsersFilter","handleSubmit","disableBtn","setDisableBtn","formik","useFormik","initialValues","onSubmit","values","Form","className","type","value","onChange","handleChange","placeholder","setSearchParams","setCurrentPortionNum","useAppDispatch","useEffect","searchParams","page","String","handlePageChange","useCallback","handlePrevBtnClick","handleNextBtnClick","findUsers","newFilter","console","log","action","Page","PagePreloader","useAppSelector","useSearchParams","get","actualPageNum","Number","actualFilter","GlobalError","onPage"],"sourceRoot":""}