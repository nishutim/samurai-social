{"version":3,"file":"static/js/579.69334ae2.chunk.js","mappings":"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","sources":["components/styled/Button.ts","components/styled/Container.ts","components/styled/Page.ts","components/styled/FlexContainer.ts","components/styled/Avatar.ts","components/LoginForm/style.ts","components/LoginForm/LoginForm.tsx","pages/LoginPage/style.ts","pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\ninterface Props {\r\n   alignSelf?: string\r\n   p?: string\r\n   pt?: string\r\n   pr?: string\r\n   pb?: string\r\n   pl?: string\r\n   m?: string\r\n   mt?: string\r\n   mr?: string\r\n   mb?: string\r\n   ml?: string\r\n}\r\n\r\nexport const Button = styled.button.attrs<Props>(props => ({\r\n   alignSelf: props.alignSelf || 'stretch',\r\n   p: props.p || '5px 15px',\r\n   pt: props.pt || '0',\r\n   pr: props.pr || '0',\r\n   pb: props.pb || '0',\r\n   pl: props.pl || '0',\r\n   m: props.m || '0',\r\n   mt: props.mt || '0',\r\n   mr: props.mr || '0',\r\n   mb: props.mb || '0',\r\n   ml: props.ml || '0'\r\n})) <Props>`\r\n   align-self: ${props => props.alignSelf};\r\n   padding-top: ${props => props.pt};\r\n   padding-right: ${props => props.pr};\r\n   padding-bottom: ${props => props.pb};\r\n   padding-left: ${props => props.pl};\r\n   padding: ${props => props.p};\r\n   margin: ${props => props.m};\r\n   margin-top: ${props => props.mt};\r\n   margin-right: ${props => props.mr};\r\n   margin-bottom: ${props => props.mb};\r\n   margin-left: ${props => props.ml};\r\n   border-radius: 5px;\r\n   display: flex;\r\n   justify-content: center;\r\n   align-items: center;\r\n   background-color: #E89F71;\r\n   font-size: 18px;\r\n   color: white;\r\n   transition: all 0.3s ease;\r\n\r\n   &:hover {\r\n      background-color: #c48864;\r\n   }\r\n\r\n   &:disabled {\r\n      background-color: ${props => props.theme.colors.$gray};\r\n   }\r\n`;","import styled from 'styled-components';\r\n\r\ninterface Props {\r\n   minHeight?: string\r\n   height?: string\r\n   maxWidth?: string\r\n   flex?: string\r\n   display?: string\r\n   direction?: string\r\n   justify?: string\r\n   align?: string\r\n}\r\n\r\nexport const Container = styled.div.attrs<Props>(props => ({\r\n   minHeight: props.height || 'auto',\r\n   height: props.height || 'auto',\r\n   maxWidth: props.maxWidth || '1230px',\r\n   display: props.display || 'block',\r\n   flex: props.flex || '0 1 auto',\r\n   direction: props.direction || 'row',\r\n   justify: props.justify || 'stretch',\r\n   align: props.align || 'stretch',\r\n})) <Props>`\r\n   min-height: ${props => props.minHeight}\r\n   height: ${props => props.height};\r\n   max-width: ${props => props.maxWidth};\r\n   margin: 0 auto;\r\n   padding: 0 15px;\r\n   flex: ${props => props.flex};\r\n   display: ${props => props.display};\r\n   flex-direction: ${props => props.direction};\r\n   justify-content: ${props => props.justify};\r\n   align-items: ${props => props.align};\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Page = styled.div`\r\n   flex: 1 1 auto;\r\n   display: flex;\r\n   flex-direction: column;\r\n`;\r\n\r\nexport const PageBody = styled(Page)`\r\n   \r\n`;","import styled from 'styled-components';\r\n\r\ninterface Props {\r\n   flex?: string\r\n   alignSelf?: string\r\n   direction?: string\r\n   justify?: string\r\n   align?: string\r\n   p?: string\r\n   pt?: string\r\n   pr?: string\r\n   pb?: string\r\n   pl?: string\r\n   m?: string\r\n   mt?: string\r\n   mr?: string\r\n   mb?: string\r\n   ml?: string\r\n}\r\n\r\nexport const FlexContainer = styled.div.attrs<Props>(props => ({\r\n   flex: props.flex || '0 1 auto',\r\n   alignSelf: props.alignSelf || 'stretch',\r\n   direction: props.direction || 'row',\r\n   justify: props.justify || 'stretch',\r\n   align: props.align || 'stretch',\r\n   pt: props.pt || '0',\r\n   pr: props.pr || '0',\r\n   pb: props.pb || '0',\r\n   pl: props.pl || '0',\r\n   p: props.p || '0',\r\n   mt: props.mt || '0',\r\n   mr: props.mr || '0',\r\n   mb: props.mb || '0',\r\n   ml: props.ml || '0',\r\n   m: props.m || '0'\r\n})) <Props>`\r\n   flex: ${props => props.flex};\r\n   align-self: ${props => props.alignSelf};\r\n   display: flex;\r\n   flex-direction: ${props => props.direction};\r\n   justify-content: ${props => props.justify};\r\n   align-items: ${props => props.align};\r\n   padding-top: ${props => props.pt};\r\n   padding-right: ${props => props.pr};\r\n   padding-bottom: ${props => props.pb};\r\n   padding-left: ${props => props.pl};\r\n   padding: ${props => props.p};\r\n   margin-top: ${props => props.mt};\r\n   margin-right: ${props => props.mr};\r\n   margin-bottom: ${props => props.mb};\r\n   margin-left: ${props => props.ml};\r\n   margin: ${props => props.m};\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Avatar = styled.div`\r\n   position: relative;\r\n\r\n   img {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: cover;\r\n   }\r\n`;","import styled, { ITheme } from \"styled-components\";\r\n\r\ninterface IProps {\r\n   theme?: ITheme\r\n}\r\n\r\nexport const StyledLoginForm = styled.form<IProps>`\r\n   min-width: 450px;\r\n   padding: 25px;\r\n   border: 1px solid ${props => props.theme.colors.$lightGray};\r\n   border-radius: 10px;\r\n   display: flex;\r\n   flex-direction: column;\r\n   background-color: ${props => props.theme.colors.$darkCremaBG};\r\n`;\r\n\r\nexport const LoginFormTitle = styled.h1`\r\n   font-size: 28px;\r\n   text-align: center;\r\n\r\n   &:not(:last-child) {\r\n      margin-bottom: 20px;\r\n   }\r\n`;\r\n\r\nexport const LoginFormStatus = styled.h3`\r\n   font-size: 18px;\r\n   color: ${props => props.theme.colors.$red};\r\n   text-align: center;\r\n\r\n   &:not(:last-child) {\r\n      margin-bottom: 10px;\r\n   }\r\n`;\r\n\r\nexport const LoginFormBody = styled.div`\r\n   display: flex;\r\n   flex-direction: column;\r\n   gap: 20px;\r\n`;\r\n\r\nexport const LoginFormField = styled.div`\r\n   display: flex;\r\n   flex-direction: column;\r\n`;\r\n\r\nexport const LoginFormFieldMessage = styled.h4`\r\n   font-size: 16px;\r\n   padding-left: 10px;\r\n   color: ${props => props.theme.colors.$red};\r\n\r\n   &:not(:last-child) {\r\n      margin-bottom: 5px;\r\n   }\r\n`;\r\n\r\nexport const LoginFormInput = styled.input`\r\n   width: 100%;\r\n   padding: 10px;\r\n   border: 1px solid ${props => props.theme.colors.$lightGray};\r\n   border-radius: 10px;\r\n   font-size: 16px;\r\n   color: ${props => props.theme.colors.$gray};\r\n   transition: all 0.3s ease;\r\n\r\n   &:focus {\r\n      border-color: ${props => props.theme.colors.$orange};\r\n   }\r\n`;\r\n\r\nexport const LoginFormCheckbox = styled.label`\r\n   &:hover {\r\n      cursor: pointer;\r\n   }\r\n\r\n   input {\r\n      margin-right: 5px;\r\n   }\r\n`;\r\n\r\nexport const LoginFormCaptcha = styled(LoginFormInput)`\r\n   font-size: 24px;\r\n`;\r\n\r\nexport const RegistrationLink = styled.p`\r\n\r\n   a {\r\n      color: ${props => props.theme.colors.$orange};\r\n      transition: all 0.3s ease;\r\n\r\n      &:hover {\r\n         color: ${props => props.theme.colors.$orangeHover};\r\n      }\r\n   }\r\n`;","import React, { FC } from \"react\";\r\nimport { FormikErrors, useFormik } from \"formik\";\r\nimport { SetStatusT } from \"../../types\";\r\nimport { Button, FlexContainer } from \"../styled\";\r\nimport {\r\n   StyledLoginForm,\r\n   LoginFormTitle,\r\n   LoginFormStatus,\r\n   LoginFormBody,\r\n   LoginFormField,\r\n   LoginFormFieldMessage,\r\n   LoginFormInput,\r\n   LoginFormCaptcha,\r\n   RegistrationLink,\r\n   LoginFormCheckbox\r\n} from \"./style\";\r\n\r\ninterface Props {\r\n   isLoading: boolean\r\n   captchaUrl: string\r\n   handleLogin: (values: FormValues, setStatus: SetStatusT) => void\r\n}\r\n\r\nexport interface FormValues {\r\n   email: string\r\n   password: string\r\n   rememberMe: boolean\r\n   captcha: string\r\n}\r\n\r\nconst LoginForm: FC<Props> = React.memo(({ isLoading, captchaUrl, handleLogin }) => {\r\n   const validate = (values: FormValues) => {\r\n      const errors: FormikErrors<FormValues> = {};\r\n      if (!values.email) {\r\n         errors.email = 'Required';\r\n      } else if (values.email.length > 40) {\r\n         errors.email = 'Must be 40 characters or less';\r\n      }\r\n\r\n      if (!values.password) {\r\n         errors.password = 'Required';\r\n      }\r\n\r\n      if (captchaUrl && !values.captcha) {\r\n         errors.captcha = 'Required';\r\n      }\r\n\r\n      return errors;\r\n   }\r\n\r\n   const formik = useFormik({\r\n      initialValues: {\r\n         email: '',\r\n         password: '',\r\n         rememberMe: false,\r\n         captcha: ''\r\n      } as FormValues,\r\n      validate,\r\n      onSubmit: (values, { setStatus }) => {\r\n         handleLogin(values, setStatus);\r\n      }\r\n   })\r\n\r\n   return (\r\n      <StyledLoginForm onSubmit={formik.handleSubmit}>\r\n         <LoginFormTitle>Authorisation</LoginFormTitle>\r\n         {formik.status && <LoginFormStatus>{formik.status}</LoginFormStatus>}\r\n         <LoginFormBody>\r\n            <LoginFormField>\r\n               {formik.errors.email && formik.touched.email && <LoginFormFieldMessage>{formik.errors.email}</LoginFormFieldMessage>}\r\n               <LoginFormInput\r\n                  type={'text'}\r\n                  name={'email'}\r\n                  value={formik.values.email}\r\n                  onChange={formik.handleChange}\r\n                  placeholder={'Enter your email...'} />\r\n            </LoginFormField>\r\n            <LoginFormField>\r\n               {formik.errors.password && formik.touched.password && <LoginFormFieldMessage>{formik.errors.password}</LoginFormFieldMessage>}\r\n               <LoginFormInput\r\n                  type={'password'}\r\n                  name={'password'}\r\n                  value={formik.values.password}\r\n                  onChange={formik.handleChange}\r\n                  placeholder={'Enter your password...'} />\r\n            </LoginFormField>\r\n            <LoginFormField>\r\n               <LoginFormCheckbox>\r\n                  <input type=\"checkbox\" name=\"rememberMe\" checked={formik.values.rememberMe} onChange={formik.handleChange} />\r\n                  Remember me\r\n               </LoginFormCheckbox>\r\n            </LoginFormField>\r\n            {captchaUrl &&\r\n               <LoginFormField>\r\n                  {formik.errors.captcha && formik.touched.captcha && <LoginFormFieldMessage>{formik.errors.captcha}</LoginFormFieldMessage>}\r\n                  <FlexContainer>\r\n                     <img src={captchaUrl} alt=\"\" />\r\n                     <LoginFormCaptcha\r\n                        type={'text'}\r\n                        name={'captcha'}\r\n                        value={formik.values.captcha}\r\n                        onChange={formik.handleChange}\r\n                        placeholder={'Enter captcha'} />\r\n                  </FlexContainer>\r\n               </LoginFormField>\r\n            }\r\n            <FlexContainer\r\n               justify=\"space-between\"\r\n               align=\"center\"\r\n            >\r\n               <RegistrationLink>\r\n                  Still don't have an account? <a href=\"https://social-network.samuraijs.com/signUp\" target={'_blank'}>Sign up!</a>\r\n               </RegistrationLink>\r\n               <Button type=\"submit\" disabled={isLoading}>Sing in</Button>\r\n            </FlexContainer>\r\n         </LoginFormBody>\r\n      </StyledLoginForm>\r\n   );\r\n})\r\n\r\nexport default LoginForm;","import styled from \"styled-components\";\r\n\r\nexport const StyledLoginPage = styled.div`\r\n   min-height: 100vh;\r\n   display: flex;\r\n   justify-content: center;\r\n   align-items: center;\r\n   background-color: #FCF8F3;\r\n`;","import React, { FC } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks/redux\";\r\nimport { auth_selectCaptcha, auth_selectIsLoading } from \"../../store/reducers/auth/selectors\";\r\nimport LoginForm, { FormValues } from \"../../components/LoginForm/LoginForm\";\r\nimport { SetStatusT } from \"../../types\";\r\nimport { login } from \"../../store/reducers/auth/thunk-creators\";\r\nimport { StyledLoginPage } from \"./style\";\r\n\r\nconst LoginPage: FC = () => {\r\n   const isLoading = useAppSelector(auth_selectIsLoading);\r\n   const captchaUrl = useAppSelector(auth_selectCaptcha);\r\n\r\n   const dispatch = useAppDispatch();\r\n\r\n   const handleLogin = (values: FormValues, setStatus: SetStatusT) => {\r\n      const { email, password, rememberMe, captcha } = values;\r\n      dispatch(login(email, password, rememberMe, captcha, setStatus));\r\n   }\r\n\r\n   return (\r\n      <StyledLoginPage>\r\n         <LoginForm\r\n            isLoading={isLoading}\r\n            captchaUrl={captchaUrl}\r\n            handleLogin={handleLogin} />\r\n      </StyledLoginPage>\r\n   );\r\n}\r\n\r\nexport default LoginPage;"],"names":["Button","styled","props","alignSelf","p","pt","pr","pb","pl","m","mt","mr","mb","ml","theme","colors","$gray","Container","minHeight","height","maxWidth","display","flex","direction","justify","align","Page","PageBody","FlexContainer","Avatar","StyledLoginForm","$lightGray","$darkCremaBG","LoginFormTitle","LoginFormStatus","$red","LoginFormBody","LoginFormField","LoginFormFieldMessage","LoginFormInput","$orange","LoginFormCheckbox","LoginFormCaptcha","RegistrationLink","$orangeHover","React","isLoading","captchaUrl","handleLogin","formik","useFormik","initialValues","email","password","rememberMe","captcha","validate","values","errors","length","onSubmit","setStatus","handleSubmit","status","touched","type","name","value","onChange","handleChange","placeholder","checked","src","alt","href","target","disabled","StyledLoginPage","useAppSelector","auth_selectIsLoading","auth_selectCaptcha","dispatch","useAppDispatch","login"],"sourceRoot":""}